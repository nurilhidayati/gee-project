// Import the Landsat 8 dataset

var landsat8 = ee.ImageCollection('LANDSAT/LC08/C01/T1_TOA');

// Import your location of interest

var ROI = ee.FeatureCollection("users/hashim6107/study_area_boundaryt");

// Filter the Landsat 8 data using your location of interest

var spatialFiltered = landsat8.filterBounds(ROI);

// Then filter it using your dates of interest

var temporalFiltered = spatialFiltered.filterDate('2016-01-01', '2017-01-01');

// This is a function to calculate NDVI from a Landsat 8 raster and add it as another layer

var addNDVI = function(image) {
  var ndvi = image.normalizedDifference(['B5', 'B4']).rename('NDVI');
  return image.addBands(ndvi);
};

// Here we apply the function above to our filtered image collection

var withNDVI = temporalFiltered.map(addNDVI);

// Collect peak "greenness" from our images into one map

var greenest = withNDVI.qualityMosaic('NDVI');

// And cut it out to the shape of our region

var greenROI = greenest.clip(ROI);

// Display the result by it's NDVI value

var visParams = {min: -1, max: 1, bands: ['NDVI'], palette: ['blue', 'white', 'green']};

Map.centerObject(ROI, 11);

// Set a threshold for vegetation on the NDVI index

var threshold = 0.2;

// This makes a map with 0 values for non-vegetation, and 1 values for vegetation

var vegetation = greenROI.select('NDVI').gt(threshold);

// This takes the average (mean) value of our vegetation map, aka the Green Coverage

var green = vegetation.reduceRegion({
  reducer: ee.Reducer.mean(),
  geometry: ROI,
  scale: 30
});

// Print out the value of our green coverage in the console so you can write it down!

print(green);

Map.addLayer(greenROI, visParams, 'Max NDVI mosiac');
Export.image.toAsset({image: greenROI.toFloat(),description:"NDVI",region:ROI,scale:30});
